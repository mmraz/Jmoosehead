package org.mraz.moose.dao.model.obj.moose;

import com.felees.hbnpojogen.persistence.IPojoGenEntity;
import java.io.Serializable;
import java.util.Collections;
import java.util.Date;
import java.util.Map;
import java.util.WeakHashMap;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.Table;
import javax.persistence.Transient;
import org.hibernate.annotations.Parameter;
import org.hibernate.annotations.Type;
import org.hibernate.annotations.TypeDef;
import org.hibernate.annotations.TypeDefs;
import org.hibernate.proxy.HibernateProxy;
import org.mraz.moose.dao.enums.db.moose.PlayerGenderEnum;
import org.mraz.moose.dao.enums.db.moose.PlayerTrueGenderEnum;
import org.mraz.moose.dao.enums.subtype.moose.PlayerSubclassType;
import org.mraz.moose.dao.model.obj.moose.iface.IPlayer;


/** 
 * Object mapping for hibernate-handled table: player.
 * @author autogenerated
 */

@TypeDefs( {@TypeDef(name = "enumType", typeClass = com.felees.hbnpojogen.persistence.impl.StringValuedEnumType.class)} )
@Entity
@Inheritance(strategy = InheritanceType.JOINED)
@Table(name = "player", catalog = "moose")
public class Player implements Cloneable, Serializable, IPojoGenEntity, IPlayer {

	/** Serial Version UID. */
	private static final long serialVersionUID = -559033534L;

	/** Use a WeakHashMap so entries will be garbage collected once all entities 
		referring to a saved hash are garbage collected themselves. */
	private static final Map<Serializable, Date> SAVED_HASHES =
		Collections.synchronizedMap(new WeakHashMap<Serializable, Date>());
	
	/** hashCode temporary storage. */
	private volatile Date hashCode;
	

	/** Field mapping. */
	private String bamfIn;
	/** Field mapping. */
	private String bamfOut;
	/** Field mapping. */
	private Long clanId;
	/** Field mapping. */
	private String description;
	/** Field mapping. */
	private String email;
	/** Field mapping. */
	private PlayerGenderEnum gender;
	/** Field mapping. */
	private Date id;
	/** Field mapping. */
	private Long level;
	/** Field mapping. */
	private String longDesc;
	/** Field mapping. */
	private String name;
	/** Field mapping. */
	private String password;
	/** Field mapping. */
	private Long played;
	/** Field mapping. */
	private Long raceId;
	/** Field mapping. */
	private String shortDesc;
	/** Field mapping. */
	private String surname;
	/** Field mapping. */
	private String title;
	/** Field mapping. */
	private PlayerTrueGenderEnum trueGender;
	/** Field mapping. */
	private Long trust;
	/** Field mapping. */
	private Long version;
	/** Field mapping. */
	private String whoname;
	/**
	 * Default constructor, mainly for hibernate use.
	 */
	public Player() {
		// Default constructor
	} 

	/** Constructor taking a given ID.
	 * @param id to set
	 */
	public Player(Date id) {
		this.id = id;
	}
	
	/** Constructor taking a given ID.
	 * @param gender PlayerGenderEnum object;
	 * @param id Date object;
	 * @param level Long object;
	 * @param name String object;
	 * @param password String object;
	 * @param played Long object;
	 * @param raceId Long object;
	 * @param version Long object;
	 */
	public Player(PlayerGenderEnum gender, Date id, Long level, 					
			String name, String password, Long played, 					
			Long raceId, Long version) {

		this.gender = gender;
		this.id = id;
		this.level = level;
		this.name = name;
		this.password = password;
		this.played = played;
		this.raceId = raceId;
		this.version = version;
	}
	
 


 	/**
 	 * Return an enum of the type of this subclass. This is useful to be able to use switch/case in your code.
 	 *
 	 * @return PlayerSubclassType enum.
 	 */
 	@Transient
 	public PlayerSubclassType getPlayerSubclassType() {
		return PlayerSubclassType.NOT_A_CHILD;
 	}  
  
	/** Return the type of this class. Useful for when dealing with proxies.
	* @return Defining class.
	*/
	@Transient
	public Class<?> getClassType() {
		return Player.class;
	}
 

    /**
     * Return the value associated with the column: bamfIn.
	 * @return A String object (this.bamfIn)
	 */
	@Column( name = "bamf_in", length = 2048  )
	public String getBamfIn() {
		return this.bamfIn;
		
	}
	

  
    /**  
     * Set the value related to the column: bamfIn.
	 * @param bamfIn the bamfIn value you wish to set
	 */
	public void setBamfIn(final String bamfIn) {
		this.bamfIn = bamfIn;
	}

    /**
     * Return the value associated with the column: bamfOut.
	 * @return A String object (this.bamfOut)
	 */
	@Column( name = "bamf_out", length = 2048  )
	public String getBamfOut() {
		return this.bamfOut;
		
	}
	

  
    /**  
     * Set the value related to the column: bamfOut.
	 * @param bamfOut the bamfOut value you wish to set
	 */
	public void setBamfOut(final String bamfOut) {
		this.bamfOut = bamfOut;
	}

    /**
     * Return the value associated with the column: clanId.
	 * @return A Long object (this.clanId)
	 */
	@Column( name = "clan_id"  )
	public Long getClanId() {
		return this.clanId;
		
	}
	

  
    /**  
     * Set the value related to the column: clanId.
	 * @param clanId the clanId value you wish to set
	 */
	public void setClanId(final Long clanId) {
		this.clanId = clanId;
	}

    /**
     * Return the value associated with the column: description.
	 * @return A String object (this.description)
	 */
	@Column( length = 4096  )
	public String getDescription() {
		return this.description;
		
	}
	

  
    /**  
     * Set the value related to the column: description.
	 * @param description the description value you wish to set
	 */
	public void setDescription(final String description) {
		this.description = description;
	}

    /**
     * Return the value associated with the column: email.
	 * @return A String object (this.email)
	 */
	@Column( length = 80  )
	public String getEmail() {
		return this.email;
		
	}
	

  
    /**  
     * Set the value related to the column: email.
	 * @param email the email value you wish to set
	 */
	public void setEmail(final String email) {
		this.email = email;
	}

    /**
     * Return the value associated with the column: gender.
	 * @return A PlayerGenderEnum object (this.gender)
	 */
	@Type(type = "enumType", parameters = {@Parameter(name = "enum", value = "org.mraz.moose.dao.enums.db.moose.PlayerGenderEnum")})
	@Column( nullable = false  )
	public PlayerGenderEnum getGender() {
		return this.gender;
		
	}
	

  
    /**  
     * Set the value related to the column: gender.
	 * @param gender the gender value you wish to set
	 */
	public void setGender(final PlayerGenderEnum gender) {
		this.gender = gender;
	}

    /**
     * Return the value associated with the column: id.
	 * @return A Date object (this.id)
	 */
    @Id 
	@Column( name = "id", nullable = false  )
	public Date getId() {
		return this.id;
		
	}
	

  
    /**  
     * Set the value related to the column: id.
	 * @param id the id value you wish to set
	 */
	public void setId(final Date id) {
		// If we've just been persisted and hashCode has been
		// returned then make sure other entities with this
		// ID return the already returned hash code
		if ( (this.id == null ) &&
				(id != null) &&
				(this.hashCode != null) ) {
			SAVED_HASHES.put( id, this.hashCode );
		}
		this.id = id;
	}

    /**
     * Return the value associated with the column: level.
	 * @return A Long object (this.level)
	 */
	@Column( nullable = false  )
	public Long getLevel() {
		return this.level;
		
	}
	

  
    /**  
     * Set the value related to the column: level.
	 * @param level the level value you wish to set
	 */
	public void setLevel(final Long level) {
		this.level = level;
	}

    /**
     * Return the value associated with the column: longDesc.
	 * @return A String object (this.longDesc)
	 */
	@Column( name = "long_desc", length = 4096  )
	public String getLongDesc() {
		return this.longDesc;
		
	}
	

  
    /**  
     * Set the value related to the column: longDesc.
	 * @param longDesc the longDesc value you wish to set
	 */
	public void setLongDesc(final String longDesc) {
		this.longDesc = longDesc;
	}

    /**
     * Return the value associated with the column: name.
	 * @return A String object (this.name)
	 */
	@Column( nullable = false, length = 20  )
	public String getName() {
		return this.name;
		
	}
	

  
    /**  
     * Set the value related to the column: name.
	 * @param name the name value you wish to set
	 */
	public void setName(final String name) {
		this.name = name;
	}

    /**
     * Return the value associated with the column: password.
	 * @return A String object (this.password)
	 */
	@Column( nullable = false, length = 45  )
	public String getPassword() {
		return this.password;
		
	}
	

  
    /**  
     * Set the value related to the column: password.
	 * @param password the password value you wish to set
	 */
	public void setPassword(final String password) {
		this.password = password;
	}

    /**
     * Return the value associated with the column: played.
	 * @return A Long object (this.played)
	 */
	@Column( nullable = false  )
	public Long getPlayed() {
		return this.played;
		
	}
	

  
    /**  
     * Set the value related to the column: played.
	 * @param played the played value you wish to set
	 */
	public void setPlayed(final Long played) {
		this.played = played;
	}

    /**
     * Return the value associated with the column: raceId.
	 * @return A Long object (this.raceId)
	 */
	@Column( name = "race_id", nullable = false  )
	public Long getRaceId() {
		return this.raceId;
		
	}
	

  
    /**  
     * Set the value related to the column: raceId.
	 * @param raceId the raceId value you wish to set
	 */
	public void setRaceId(final Long raceId) {
		this.raceId = raceId;
	}

    /**
     * Return the value associated with the column: shortDesc.
	 * @return A String object (this.shortDesc)
	 */
	@Column( name = "short_desc", length = 80  )
	public String getShortDesc() {
		return this.shortDesc;
		
	}
	

  
    /**  
     * Set the value related to the column: shortDesc.
	 * @param shortDesc the shortDesc value you wish to set
	 */
	public void setShortDesc(final String shortDesc) {
		this.shortDesc = shortDesc;
	}

    /**
     * Return the value associated with the column: surname.
	 * @return A String object (this.surname)
	 */
	@Column( length = 45  )
	public String getSurname() {
		return this.surname;
		
	}
	

  
    /**  
     * Set the value related to the column: surname.
	 * @param surname the surname value you wish to set
	 */
	public void setSurname(final String surname) {
		this.surname = surname;
	}

    /**
     * Return the value associated with the column: title.
	 * @return A String object (this.title)
	 */
	@Column( length = 80  )
	public String getTitle() {
		return this.title;
		
	}
	

  
    /**  
     * Set the value related to the column: title.
	 * @param title the title value you wish to set
	 */
	public void setTitle(final String title) {
		this.title = title;
	}

    /**
     * Return the value associated with the column: trueGender.
	 * @return A PlayerTrueGenderEnum object (this.trueGender)
	 */
	@Type(type = "enumType", parameters = {@Parameter(name = "enum", value = "org.mraz.moose.dao.enums.db.moose.PlayerTrueGenderEnum")})
	@Column( name = "true_gender"  )
	public PlayerTrueGenderEnum getTrueGender() {
		return this.trueGender;
		
	}
	

  
    /**  
     * Set the value related to the column: trueGender.
	 * @param trueGender the trueGender value you wish to set
	 */
	public void setTrueGender(final PlayerTrueGenderEnum trueGender) {
		this.trueGender = trueGender;
	}

    /**
     * Return the value associated with the column: trust.
	 * @return A Long object (this.trust)
	 */
	public Long getTrust() {
		return this.trust;
		
	}
	

  
    /**  
     * Set the value related to the column: trust.
	 * @param trust the trust value you wish to set
	 */
	public void setTrust(final Long trust) {
		this.trust = trust;
	}

    /**
     * Return the value associated with the column: version.
	 * @return A Long object (this.version)
	 */
	@Column( nullable = false  )
	public Long getVersion() {
		return this.version;
		
	}
	

  
    /**  
     * Set the value related to the column: version.
	 * @param version the version value you wish to set
	 */
	public void setVersion(final Long version) {
		this.version = version;
	}

    /**
     * Return the value associated with the column: whoname.
	 * @return A String object (this.whoname)
	 */
	@Column( length = 20  )
	public String getWhoname() {
		return this.whoname;
		
	}
	

  
    /**  
     * Set the value related to the column: whoname.
	 * @param whoname the whoname value you wish to set
	 */
	public void setWhoname(final String whoname) {
		this.whoname = whoname;
	}


   /**
    * Deep copy.
	* @return cloned object
	* @throws CloneNotSupportedException on error
    */
    @Override
    public Player clone() throws CloneNotSupportedException {
		
        final Player copy = (Player)super.clone();

		copy.setBamfIn(this.getBamfIn());
		copy.setBamfOut(this.getBamfOut());
		copy.setClanId(this.getClanId());
		copy.setDescription(this.getDescription());
		copy.setEmail(this.getEmail());
		copy.setGender(this.getGender());
		copy.setId(this.getId());
		copy.setLevel(this.getLevel());
		copy.setLongDesc(this.getLongDesc());
		copy.setName(this.getName());
		copy.setPassword(this.getPassword());
		copy.setPlayed(this.getPlayed());
		copy.setRaceId(this.getRaceId());
		copy.setShortDesc(this.getShortDesc());
		copy.setSurname(this.getSurname());
		copy.setTitle(this.getTitle());
		copy.setTrueGender(this.getTrueGender());
		copy.setTrust(this.getTrust());
		copy.setVersion(this.getVersion());
		copy.setWhoname(this.getWhoname());
		return copy;
	}
	


	/** Provides toString implementation.
	 * @see java.lang.Object#toString()
	 * @return String representation of this class.
	 */
	@Override
	public String toString() {
		StringBuffer sb = new StringBuffer();
		
		sb.append("bamfIn: " + this.getBamfIn() + ", ");
		sb.append("bamfOut: " + this.getBamfOut() + ", ");
		sb.append("clanId: " + this.getClanId() + ", ");
		sb.append("description: " + this.getDescription() + ", ");
		sb.append("email: " + this.getEmail() + ", ");
		sb.append("gender: " + this.getGender() + ", ");
		sb.append("id: " + this.getId() + ", ");
		sb.append("level: " + this.getLevel() + ", ");
		sb.append("longDesc: " + this.getLongDesc() + ", ");
		sb.append("name: " + this.getName() + ", ");
		sb.append("password: " + this.getPassword() + ", ");
		sb.append("played: " + this.getPlayed() + ", ");
		sb.append("raceId: " + this.getRaceId() + ", ");
		sb.append("shortDesc: " + this.getShortDesc() + ", ");
		sb.append("surname: " + this.getSurname() + ", ");
		sb.append("title: " + this.getTitle() + ", ");
		sb.append("trueGender: " + this.getTrueGender() + ", ");
		sb.append("trust: " + this.getTrust() + ", ");
		sb.append("version: " + this.getVersion() + ", ");
		sb.append("whoname: " + this.getWhoname());
		return sb.toString();		
	}


	/** Equals implementation. 
	 * @see java.lang.Object#equals(java.lang.Object)
	 * @param aThat Object to compare with
	 * @return true/false
	 */
	@Override
	public boolean equals(final Object aThat) {
		Object proxyThat = aThat;
		
		if ( this == aThat ) {
			 return true;
		}

		
		if (aThat instanceof HibernateProxy) {
 			// narrow down the proxy to the class we are dealing with.
 			try {
				proxyThat = ((HibernateProxy) aThat).getHibernateLazyInitializer().getImplementation(); 
			} catch (org.hibernate.ObjectNotFoundException e) {
				return false;
		   	}
		}
		if (aThat == null)  {
			 return false;
		}
		
		final Player that; 
		try {
			that = (Player) proxyThat;
			if ( !(that.getClassType().equals(this.getClassType()))){
				return false;
			}
		} catch (org.hibernate.ObjectNotFoundException e) {
				return false;
		} catch (ClassCastException e) {
				return false;
		}
		
		
		boolean result = true;
		result = result && (((this.getId() == null) && ( that.getId() == null)) || (this.getId() != null  && this.getId().equals(that.getId())));
		result = result && (((getBamfIn() == null) && (that.getBamfIn() == null)) || (getBamfIn() != null && getBamfIn().equals(that.getBamfIn())));
		result = result && (((getBamfOut() == null) && (that.getBamfOut() == null)) || (getBamfOut() != null && getBamfOut().equals(that.getBamfOut())));
		result = result && (((getClanId() == null) && (that.getClanId() == null)) || (getClanId() != null && getClanId().equals(that.getClanId())));
		result = result && (((getDescription() == null) && (that.getDescription() == null)) || (getDescription() != null && getDescription().equals(that.getDescription())));
		result = result && (((getEmail() == null) && (that.getEmail() == null)) || (getEmail() != null && getEmail().equals(that.getEmail())));
		result = result && (((getGender() == null) && (that.getGender() == null)) || (getGender() != null && getGender().equals(that.getGender())));
		result = result && (((getLevel() == null) && (that.getLevel() == null)) || (getLevel() != null && getLevel().equals(that.getLevel())));
		result = result && (((getLongDesc() == null) && (that.getLongDesc() == null)) || (getLongDesc() != null && getLongDesc().equals(that.getLongDesc())));
		result = result && (((getName() == null) && (that.getName() == null)) || (getName() != null && getName().equals(that.getName())));
		result = result && (((getPassword() == null) && (that.getPassword() == null)) || (getPassword() != null && getPassword().equals(that.getPassword())));
		result = result && (((getPlayed() == null) && (that.getPlayed() == null)) || (getPlayed() != null && getPlayed().equals(that.getPlayed())));
		result = result && (((getRaceId() == null) && (that.getRaceId() == null)) || (getRaceId() != null && getRaceId().equals(that.getRaceId())));
		result = result && (((getShortDesc() == null) && (that.getShortDesc() == null)) || (getShortDesc() != null && getShortDesc().equals(that.getShortDesc())));
		result = result && (((getSurname() == null) && (that.getSurname() == null)) || (getSurname() != null && getSurname().equals(that.getSurname())));
		result = result && (((getTitle() == null) && (that.getTitle() == null)) || (getTitle() != null && getTitle().equals(that.getTitle())));
		result = result && (((getTrueGender() == null) && (that.getTrueGender() == null)) || (getTrueGender() != null && getTrueGender().equals(that.getTrueGender())));
		result = result && (((getTrust() == null) && (that.getTrust() == null)) || (getTrust() != null && getTrust().equals(that.getTrust())));
		result = result && (((getVersion() == null) && (that.getVersion() == null)) || (getVersion() != null && getVersion().equals(that.getVersion())));
		result = result && (((getWhoname() == null) && (that.getWhoname() == null)) || (getWhoname() != null && getWhoname().equals(that.getWhoname())));
		return result;
	}
	
	/** Calculate the hashcode.
	 * @see java.lang.Object#hashCode()
	 * @return a calculated number
	 */
	@Override
	public int hashCode() {
		if ( this.hashCode == null ) {
			synchronized ( this ) {
				if ( this.hashCode == null ) {
					Date newHashCode = null;

					if ( getId() != null ) {
						newHashCode = SAVED_HASHES.get( getId() );
					}
					
					if ( newHashCode == null ) {
						if ( getId() != null ) {
							newHashCode = getId();
						} else {
							newHashCode = super.hashCode();

						}
					}
					
					this.hashCode = newHashCode;
				}
			}
		}
	return this.hashCode;
	}
	

	
}
